/* Universal Styles */
body {
    margin: 0px;
    background-color: whitesmoke;
    font-family: 'Rock Salt', cursive;
    text-align: center;
  }
  
  .secondary-background {
    background-color: snow;
  }
  
  .tagline {
    font-family: 'Quicksand', sans-serif;
    color: lightslategrey;
    line-height: 125px;
  }
  
  /* Header */
  h1 {
    margin: 0;
    background-color: steelblue;
    line-height: 100px;
    color: khaki;
  }
  
  h2 {
    margin: 10px;
  }
  
  /* App Container */
  .container {
    border: 2px solid snow;
  }
  
  /* To Do Section */
  .week {
  }
  
  .row {
    min-height: 200px;
    display: flex;
  }
  
  .square {
    width: 125px;
    height: 125px;
    padding: 10px;
  }
  
  .day.square {
    background-color: steelblue;
    border: 1px solid white;
  }
  
  .task.square {
    background-color: khaki;
    border: 1px solid white;
  }
  
  .task p {
    font-family: 'Quicksand', sans-serif;
    font-weight: 700;
    font-size: 12px;
  }
  
  /* Reminders */
  .reminders {
    background-color: khaki;
  }
  
  .reminders h3 {
    width: 100%;
    margin: 10px;
    color: black;
    line-height: 90px;
    font-size: 24px;
  }
  
  /* Footer */
  footer {
    font-size: 24px;
  }
  /* 1. Turning elements into flex containers */

.container,
.square {
  display: flex;
}

.week,
.reminders {
  display: inline-flex;
}

/* 2. Making elements inside inline-flex containers grow to fill */

.week {
  flex-grow: 3;
}

.reminders {
  flex-grow: 2;
}

/* 3. Ordering .week items vertically */

.week {
  flex-direction: column;
}

/* 4. Moving .row items to the next line */

.row {
  flex-wrap: wrap;
}

/* 5. Adding space around .row items and centering .square items */

.row {
  justify-content: space-around;
}

.square {
  justify-content: center;
}

/* 6. Aligning elements vertically */

.row,
.square {
  align-items: center;
}

/* 7. GitHub Pages URL (replace 'username' with your actual GitHub username) */

/* Example: https://username.github.io/css/flexbox/tasks/todo.html */